<?xml version="1.0" encoding="utf-8"?>
<mx:Window xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="400" height="100" resizable="false" maximizable="false"
		   title="動画を開く" creationComplete="window1_creationCompleteHandler(event)" closing="window1_closeHandler(event)">
	<mx:Script>
		<![CDATA[
			import mx.core.Application;
			import mx.events.FlexEvent;
			
			import org.mineap.NNDD.util.PathMaker;
			import org.mineap.util.config.ConfigManager;

			protected function window1_creationCompleteHandler(event:FlexEvent):void
			{
				loadStore();
			}


			protected function button_play_clickHandler(event:Event):void
			{
				var url:String = textInput_source.text;
				if(url != null && url.length > 0){
					
					try{
						var file:File = new File(url);
						if(file.exists){
							url = file.url;
						}
					}catch(error:Error){
						
						var videoId:String = PathMaker.getVideoID(url);
						if(videoId != null){
							url = "http://www.nicovideo.jp/watch/" + videoId;
						}else{
						}
						
					}
					
					Application.application.playMovie(url, -1);
				}
			}


			protected function button_open_clickHandler(event:MouseEvent):void
			{
				var directory:File = File.documentsDirectory;
				
				directory.browseForOpen("動画を開く",  [new FileFilter("Video", "*.mp4;*.flv;*.swf")]);
				
				// ファイル選択イベントのリスナを登録
				directory.addEventListener(Event.SELECT, function(event:Event):void{
					// イベントのターゲットが選択されたファイルなので、`File`型に変換
					var file:File = (event.target as File);
					
					textInput_source.text = file.nativePath;
					
				});
			}


			protected function window1_closeHandler(event:Event):void
			{
				saveStore();
			}
			
			private function loadStore():void{
				var value:String = ConfigManager.getInstance().getItem("videoSourceSelectWindow_x");
				if(value != null){
					this.nativeWindow.x = Number(value);
				}
				value = ConfigManager.getInstance().getItem("videoSourceSelectWindow_y");
				if(value != null){
					this.nativeWindow.y = Number(value);
				}
			}
			
			private function saveStore():void{
				if(this.nativeWindow != null){
					
					ConfigManager.getInstance().removeItem("videoSourceSelectWindow_x");
					ConfigManager.getInstance().setItem("videoSourceSelectWindow_x", this.nativeWindow.x);
					ConfigManager.getInstance().removeItem("videoSourceSelectWindow_y");
					ConfigManager.getInstance().setItem("videoSourceSelectWindow_y", this.nativeWindow.y);
					
				}
			}


			protected function textInput_source_focusInHandler(event:FocusEvent):void
			{
				var textInput:TextInput = TextInput(event.currentTarget);
				textInput.selectionBeginIndex = 0;
				textInput.selectionEndIndex = textInput.text.length;
			}


			protected function textInput_source_nativeDragEnterHandler(event:NativeDragEvent):void
			{
				if(event.clipboard.hasFormat(ClipboardFormats.TEXT_FORMAT)){
					NativeDragManager.acceptDragDrop(textInput_source);
				}
			}


			protected function textInput_source_nativeDragDropHandler(event:NativeDragEvent):void
			{
				if(event.clipboard.hasFormat(ClipboardFormats.TEXT_FORMAT)){
					textInput_source.text = String(event.clipboard);
				}
			}

		]]>
	</mx:Script>
	<mx:Label text="動画のソースまたは動画IDを入力：" left="10" top="10"/>
	<mx:TextInput left="10" right="10" top="36" id="textInput_source" 
				  enter="button_play_clickHandler(event)" 
				  focusIn="textInput_source_focusInHandler(event)"
				  nativeDragEnter="textInput_source_nativeDragEnterHandler(event)"
				  nativeDragDrop="textInput_source_nativeDragDropHandler(event)"/>
	<mx:Button label="参照..." right="64" bottom="10" id="button_open" click="button_open_clickHandler(event)"/>
	<mx:Button label="再生" right="10" bottom="10" id="button_play" click="button_play_clickHandler(event)"/>
	
</mx:Window>
